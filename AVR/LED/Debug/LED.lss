
LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000018a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000116  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000018a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000018a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001bc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000001fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000074c  00000000  00000000  0000021c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000069d  00000000  00000000  00000968  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000280  00000000  00000000  00001005  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00001288  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000380  00000000  00000000  000012ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000048  00000000  00000000  0000162c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00001674  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a2 30       	cpi	r26, 0x02	; 2
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 89 00 	jmp	0x112	; 0x112 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
int i=0;


int main(void)
{
	DDRC=0b11111111;
  90:	8f ef       	ldi	r24, 0xFF	; 255
  92:	87 b9       	out	0x07, r24	; 7
			i++;
			_delay_ms(100);
		}
		while (i>=0)
		{
			PORTC= (1<<i);
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	16 c0       	rjmp	.+44     	; 0xc6 <main+0x36>
	DDRC=0b11111111;
	while (1)
	{
		while(i<=3)
		{
			PORTC = (1<<i);
  9a:	a9 01       	movw	r20, r18
  9c:	02 c0       	rjmp	.+4      	; 0xa2 <main+0x12>
  9e:	44 0f       	add	r20, r20
  a0:	55 1f       	adc	r21, r21
  a2:	8a 95       	dec	r24
  a4:	e2 f7       	brpl	.-8      	; 0x9e <main+0xe>
  a6:	48 b9       	out	0x08, r20	; 8
			i++;
  a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ac:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  b0:	01 96       	adiw	r24, 0x01	; 1
  b2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  b6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ba:	87 ea       	ldi	r24, 0xA7	; 167
  bc:	91 e6       	ldi	r25, 0x61	; 97
  be:	01 97       	sbiw	r24, 0x01	; 1
  c0:	f1 f7       	brne	.-4      	; 0xbe <main+0x2e>
  c2:	00 c0       	rjmp	.+0      	; 0xc4 <main+0x34>
  c4:	00 00       	nop
int main(void)
{
	DDRC=0b11111111;
	while (1)
	{
		while(i<=3)
  c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ce:	84 30       	cpi	r24, 0x04	; 4
  d0:	91 05       	cpc	r25, r1
  d2:	1c f3       	brlt	.-58     	; 0x9a <main+0xa>
		{
			PORTC = (1<<i);
			i++;
			_delay_ms(100);
		}
		while (i>=0)
  d4:	99 23       	and	r25, r25
  d6:	bc f3       	brlt	.-18     	; 0xc6 <main+0x36>
		{
			PORTC= (1<<i);
  d8:	a9 01       	movw	r20, r18
  da:	02 c0       	rjmp	.+4      	; 0xe0 <main+0x50>
  dc:	44 0f       	add	r20, r20
  de:	55 1f       	adc	r21, r21
  e0:	8a 95       	dec	r24
  e2:	e2 f7       	brpl	.-8      	; 0xdc <main+0x4c>
  e4:	48 b9       	out	0x08, r20	; 8
			i--;
  e6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ea:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
  f4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
  f8:	87 ea       	ldi	r24, 0xA7	; 167
  fa:	91 e6       	ldi	r25, 0x61	; 97
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <main+0x6c>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x72>
 102:	00 00       	nop
		{
			PORTC = (1<<i);
			i++;
			_delay_ms(100);
		}
		while (i>=0)
 104:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 108:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
 10c:	99 23       	and	r25, r25
 10e:	24 f7       	brge	.-56     	; 0xd8 <main+0x48>
 110:	da cf       	rjmp	.-76     	; 0xc6 <main+0x36>

00000112 <_exit>:
 112:	f8 94       	cli

00000114 <__stop_program>:
 114:	ff cf       	rjmp	.-2      	; 0x114 <__stop_program>
