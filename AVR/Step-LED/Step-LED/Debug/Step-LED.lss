
Step-LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000274  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000220  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000274  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002a4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000002e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000899  00000000  00000000  00000304  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000067e  00000000  00000000  00000b9d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000370  00000000  00000000  0000121b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000158c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000038e  00000000  00000000  000015b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000274  00000000  00000000  0000193e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00001bb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 0e 01 	jmp	0x21c	; 0x21c <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#define time 10

int main(void)
{
	int i=0;
    DDRD = 0xff;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	DDRC =0x00;
  84:	17 b8       	out	0x07, r1	; 7
	PORTC = 0xff;  
  86:	88 b9       	out	0x08, r24	; 8
		}
		else
		{
			for (i=0;i<8;i+=2)
			{
				PORTD |=(1 << i);
  88:	81 e0       	ldi	r24, 0x01	; 1
  8a:	90 e0       	ldi	r25, 0x00	; 0
    DDRD = 0xff;
	DDRC =0x00;
	PORTC = 0xff;  
    while (1) 
	{ 
		if((PINC & (1<<5)))
  8c:	35 9b       	sbis	0x06, 5	; 6
  8e:	63 c0       	rjmp	.+198    	; 0x156 <main+0xd6>
  90:	21 e0       	ldi	r18, 0x01	; 1
  92:	30 e0       	ldi	r19, 0x00	; 0
		{
			for (i=1;i<8;i+=2)
			{
				PORTD |=(1 << i);
  94:	6b b1       	in	r22, 0x0b	; 11
  96:	ac 01       	movw	r20, r24
  98:	02 2e       	mov	r0, r18
  9a:	02 c0       	rjmp	.+4      	; 0xa0 <main+0x20>
  9c:	44 0f       	add	r20, r20
  9e:	55 1f       	adc	r21, r21
  a0:	0a 94       	dec	r0
  a2:	e2 f7       	brpl	.-8      	; 0x9c <main+0x1c>
  a4:	46 2b       	or	r20, r22
  a6:	4b b9       	out	0x0b, r20	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a8:	ef e1       	ldi	r30, 0x1F	; 31
  aa:	fe e4       	ldi	r31, 0x4E	; 78
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <main+0x2c>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <main+0x32>
  b2:	00 00       	nop
	PORTC = 0xff;  
    while (1) 
	{ 
		if((PINC & (1<<5)))
		{
			for (i=1;i<8;i+=2)
  b4:	2e 5f       	subi	r18, 0xFE	; 254
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	29 30       	cpi	r18, 0x09	; 9
  ba:	31 05       	cpc	r19, r1
  bc:	59 f7       	brne	.-42     	; 0x94 <main+0x14>
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=1;i<8;i+=2)
			{
				PORTD &= ~(1<<i);
  c2:	5b b1       	in	r21, 0x0b	; 11
  c4:	bc 01       	movw	r22, r24
  c6:	02 2e       	mov	r0, r18
  c8:	02 c0       	rjmp	.+4      	; 0xce <main+0x4e>
  ca:	66 0f       	add	r22, r22
  cc:	77 1f       	adc	r23, r23
  ce:	0a 94       	dec	r0
  d0:	e2 f7       	brpl	.-8      	; 0xca <main+0x4a>
  d2:	46 2f       	mov	r20, r22
  d4:	40 95       	com	r20
  d6:	45 23       	and	r20, r21
  d8:	4b b9       	out	0x0b, r20	; 11
  da:	ef e1       	ldi	r30, 0x1F	; 31
  dc:	fe e4       	ldi	r31, 0x4E	; 78
  de:	31 97       	sbiw	r30, 0x01	; 1
  e0:	f1 f7       	brne	.-4      	; 0xde <main+0x5e>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
			{
				PORTD |=(1 << i);
				_delay_ms(time);
			}
			
			for (i=1;i<8;i+=2)
  e6:	2e 5f       	subi	r18, 0xFE	; 254
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	29 30       	cpi	r18, 0x09	; 9
  ec:	31 05       	cpc	r19, r1
  ee:	49 f7       	brne	.-46     	; 0xc2 <main+0x42>
  f0:	27 e0       	ldi	r18, 0x07	; 7
  f2:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=7;i>=0;i-=2)
			{
				PORTD |=(1<<i);
  f4:	6b b1       	in	r22, 0x0b	; 11
  f6:	ac 01       	movw	r20, r24
  f8:	02 2e       	mov	r0, r18
  fa:	02 c0       	rjmp	.+4      	; 0x100 <main+0x80>
  fc:	44 0f       	add	r20, r20
  fe:	55 1f       	adc	r21, r21
 100:	0a 94       	dec	r0
 102:	e2 f7       	brpl	.-8      	; 0xfc <main+0x7c>
 104:	46 2b       	or	r20, r22
 106:	4b b9       	out	0x0b, r20	; 11
 108:	ef e1       	ldi	r30, 0x1F	; 31
 10a:	fe e4       	ldi	r31, 0x4E	; 78
 10c:	31 97       	sbiw	r30, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <main+0x8c>
 110:	00 c0       	rjmp	.+0      	; 0x112 <main+0x92>
 112:	00 00       	nop
			{
				PORTD &= ~(1<<i);
				_delay_ms(time);
			}
			
			for (i=7;i>=0;i-=2)
 114:	22 50       	subi	r18, 0x02	; 2
 116:	31 09       	sbc	r19, r1
 118:	2f 3f       	cpi	r18, 0xFF	; 255
 11a:	ff ef       	ldi	r31, 0xFF	; 255
 11c:	3f 07       	cpc	r19, r31
 11e:	51 f7       	brne	.-44     	; 0xf4 <main+0x74>
 120:	27 e0       	ldi	r18, 0x07	; 7
 122:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=7;i>=0;i-=2)
			{
				PORTD &=~(1<<i);
 124:	5b b1       	in	r21, 0x0b	; 11
 126:	bc 01       	movw	r22, r24
 128:	02 2e       	mov	r0, r18
 12a:	02 c0       	rjmp	.+4      	; 0x130 <main+0xb0>
 12c:	66 0f       	add	r22, r22
 12e:	77 1f       	adc	r23, r23
 130:	0a 94       	dec	r0
 132:	e2 f7       	brpl	.-8      	; 0x12c <main+0xac>
 134:	46 2f       	mov	r20, r22
 136:	40 95       	com	r20
 138:	45 23       	and	r20, r21
 13a:	4b b9       	out	0x0b, r20	; 11
 13c:	ef e1       	ldi	r30, 0x1F	; 31
 13e:	fe e4       	ldi	r31, 0x4E	; 78
 140:	31 97       	sbiw	r30, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <main+0xc0>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0xc6>
 146:	00 00       	nop
			{
				PORTD |=(1<<i);
				_delay_ms(time);
			}
			
			for (i=7;i>=0;i-=2)
 148:	22 50       	subi	r18, 0x02	; 2
 14a:	31 09       	sbc	r19, r1
 14c:	2f 3f       	cpi	r18, 0xFF	; 255
 14e:	ff ef       	ldi	r31, 0xFF	; 255
 150:	3f 07       	cpc	r19, r31
 152:	41 f7       	brne	.-48     	; 0x124 <main+0xa4>
 154:	9b cf       	rjmp	.-202    	; 0x8c <main+0xc>
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	30 e0       	ldi	r19, 0x00	; 0
		}
		else
		{
			for (i=0;i<8;i+=2)
			{
				PORTD |=(1 << i);
 15a:	6b b1       	in	r22, 0x0b	; 11
 15c:	ac 01       	movw	r20, r24
 15e:	02 2e       	mov	r0, r18
 160:	02 c0       	rjmp	.+4      	; 0x166 <main+0xe6>
 162:	44 0f       	add	r20, r20
 164:	55 1f       	adc	r21, r21
 166:	0a 94       	dec	r0
 168:	e2 f7       	brpl	.-8      	; 0x162 <main+0xe2>
 16a:	46 2b       	or	r20, r22
 16c:	4b b9       	out	0x0b, r20	; 11
 16e:	ef e1       	ldi	r30, 0x1F	; 31
 170:	fe e4       	ldi	r31, 0x4E	; 78
 172:	31 97       	sbiw	r30, 0x01	; 1
 174:	f1 f7       	brne	.-4      	; 0x172 <main+0xf2>
 176:	00 c0       	rjmp	.+0      	; 0x178 <main+0xf8>
 178:	00 00       	nop
				_delay_ms(time);
			}
		}
		else
		{
			for (i=0;i<8;i+=2)
 17a:	2e 5f       	subi	r18, 0xFE	; 254
 17c:	3f 4f       	sbci	r19, 0xFF	; 255
 17e:	28 30       	cpi	r18, 0x08	; 8
 180:	31 05       	cpc	r19, r1
 182:	59 f7       	brne	.-42     	; 0x15a <main+0xda>
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=0;i<8;i+=2)
			{
				PORTD &= ~(1<<i);
 188:	5b b1       	in	r21, 0x0b	; 11
 18a:	bc 01       	movw	r22, r24
 18c:	02 2e       	mov	r0, r18
 18e:	02 c0       	rjmp	.+4      	; 0x194 <main+0x114>
 190:	66 0f       	add	r22, r22
 192:	77 1f       	adc	r23, r23
 194:	0a 94       	dec	r0
 196:	e2 f7       	brpl	.-8      	; 0x190 <main+0x110>
 198:	46 2f       	mov	r20, r22
 19a:	40 95       	com	r20
 19c:	45 23       	and	r20, r21
 19e:	4b b9       	out	0x0b, r20	; 11
 1a0:	ef e1       	ldi	r30, 0x1F	; 31
 1a2:	fe e4       	ldi	r31, 0x4E	; 78
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <main+0x124>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x12a>
 1aa:	00 00       	nop
			{
				PORTD |=(1 << i);
				_delay_ms(time);
			}
			
			for (i=0;i<8;i+=2)
 1ac:	2e 5f       	subi	r18, 0xFE	; 254
 1ae:	3f 4f       	sbci	r19, 0xFF	; 255
 1b0:	28 30       	cpi	r18, 0x08	; 8
 1b2:	31 05       	cpc	r19, r1
 1b4:	49 f7       	brne	.-46     	; 0x188 <main+0x108>
 1b6:	26 e0       	ldi	r18, 0x06	; 6
 1b8:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=6;i>=0;i-=2)
			{
				PORTD |=(1<<i);
 1ba:	6b b1       	in	r22, 0x0b	; 11
 1bc:	ac 01       	movw	r20, r24
 1be:	02 2e       	mov	r0, r18
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <main+0x146>
 1c2:	44 0f       	add	r20, r20
 1c4:	55 1f       	adc	r21, r21
 1c6:	0a 94       	dec	r0
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <main+0x142>
 1ca:	46 2b       	or	r20, r22
 1cc:	4b b9       	out	0x0b, r20	; 11
 1ce:	ef e1       	ldi	r30, 0x1F	; 31
 1d0:	fe e4       	ldi	r31, 0x4E	; 78
 1d2:	31 97       	sbiw	r30, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <main+0x152>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x158>
 1d8:	00 00       	nop
			{
				PORTD &= ~(1<<i);
				_delay_ms(time);
			}
			
			for (i=6;i>=0;i-=2)
 1da:	22 50       	subi	r18, 0x02	; 2
 1dc:	31 09       	sbc	r19, r1
 1de:	2e 3f       	cpi	r18, 0xFE	; 254
 1e0:	ff ef       	ldi	r31, 0xFF	; 255
 1e2:	3f 07       	cpc	r19, r31
 1e4:	51 f7       	brne	.-44     	; 0x1ba <main+0x13a>
 1e6:	26 e0       	ldi	r18, 0x06	; 6
 1e8:	30 e0       	ldi	r19, 0x00	; 0
				_delay_ms(time);
			}
			
			for (i=6;i>=0;i-=2)
			{
				PORTD &=~(1<<i);
 1ea:	5b b1       	in	r21, 0x0b	; 11
 1ec:	bc 01       	movw	r22, r24
 1ee:	02 2e       	mov	r0, r18
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <main+0x176>
 1f2:	66 0f       	add	r22, r22
 1f4:	77 1f       	adc	r23, r23
 1f6:	0a 94       	dec	r0
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <main+0x172>
 1fa:	46 2f       	mov	r20, r22
 1fc:	40 95       	com	r20
 1fe:	45 23       	and	r20, r21
 200:	4b b9       	out	0x0b, r20	; 11
 202:	ef e1       	ldi	r30, 0x1F	; 31
 204:	fe e4       	ldi	r31, 0x4E	; 78
 206:	31 97       	sbiw	r30, 0x01	; 1
 208:	f1 f7       	brne	.-4      	; 0x206 <main+0x186>
 20a:	00 c0       	rjmp	.+0      	; 0x20c <main+0x18c>
 20c:	00 00       	nop
			{
				PORTD |=(1<<i);
				_delay_ms(time);
			}
			
			for (i=6;i>=0;i-=2)
 20e:	22 50       	subi	r18, 0x02	; 2
 210:	31 09       	sbc	r19, r1
 212:	2e 3f       	cpi	r18, 0xFE	; 254
 214:	ff ef       	ldi	r31, 0xFF	; 255
 216:	3f 07       	cpc	r19, r31
 218:	41 f7       	brne	.-48     	; 0x1ea <main+0x16a>
 21a:	38 cf       	rjmp	.-400    	; 0x8c <main+0xc>

0000021c <_exit>:
 21c:	f8 94       	cli

0000021e <__stop_program>:
 21e:	ff cf       	rjmp	.-2      	; 0x21e <__stop_program>
